# This is used by Docker Compose to set up prefix names for Docker images,
# containers, volumes and networks. This ensures that everything is named
# consistently regardless of your folder structure.
COMPOSE_PROJECT_NAME=todo_app

# What Rails environment are we in?
RAILS_ENV=development

# Rails log level.
#   Accepted values: debug, info, warn, error, fatal, or unknown
LOG_LEVEL=debug

# More details about these Puma variables can be found in config/puma.rb.
# Which address should the Puma app server bind to?
BIND_ON=0.0.0.0:3008
PORT=3008

# Puma supports multiple threads but in development mode you'll want to use 1
# thread to ensure that you can properly debug your application.
RAILS_MAX_THREADS=1

# Puma supports multiple workers but you should stick to 1 worker in dev mode.
WEB_CONCURRENCY=1

# Requests that exceed 5 seconds will be terminated and dumped to a stacktrace.
# Feel free to modify this value to fit the needs of your project, but if you
# have any request that takes more than 5 seconds you probably need to re-think
# what you are doing 99.99% of the time.
RACK_TIMEOUT_SERVICE_TIMEOUT=60

# Required by the Postgres Docker image. This sets up the initial database when
# you first run it.
POSTGRES_USER=todo_app
POSTGRES_PASSWORD=yourpassword

# The database name will automatically get the Rails environment appended to it
# such as: todo_app_development or todo_app_production.
DATABASE_URL=postgresql://todo_app:yourpassword@postgres:5432/todo_app?encoding=utf8&pool=5&timeout=5000
postgresql://im:im@postgres/im?pool=5

# Allow DatabaseCleaner run with postgres URL https://github.com/DatabaseCleaner/database_cleaner#safeguards
DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL=true